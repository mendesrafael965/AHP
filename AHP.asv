function AHP()
    %Limpa memória
    clear all;

    %Fecha figuras
    close all; 

    %Limpa console
    clc;
    
    disp('Matriz de comparação de pares, critério f1');

    %      p1   p2      p3     p4    
    f1 = [ 1    3       4      5;   % p1
           1/3  1       3      4;   % p2
           1/4  1/3     1      3;   % p3
           1/5  1/4     1/3    1]   % p4

    %Calcula vetor de prioridadess
    prio_f1=prioridades(f1)
    
    %Calacula o indice de inconsistencia
    ic_f1 = indiceInconsistencia(f1,0.89)
    
    disp('Matriz de comparação de pares, critério f2');

[[1.        , 2.        , 3.        , 4.  ],
[0.5       , 1.        , 2.        , 3.   ],
[0.33333333, 0.5       , 1.        , 2.   ],
[0.25      , 0.33333333, 0.5       , 1.   ]])
    
     %     p1   p2     p3     p4    
    f2 = [ 1    1/2    1/3    1/4;   % p1
           2    1      1/2    1/3;   % p2
           3    2      1      1/2;   % p3
           4    3      2        1  ]   % p4

    %Calcula vetor de prioridadess
    prio_f2=prioridades(f2)
    
    %Calacula o indice de inconsistencia
    ic_f2 = indiceInconsistencia(f2,0.89)

    disp('Matriz de comparação de pares, critérios em relacao ao objetivo');

    %            f1    f2    
    criterios= [ 1      3; %f1  
                 1/3    1] %f2    
            
    %Calcula vetor de prioridadess
    prio_crit_obje=prioridades(criterios)
    
    %Calacula o indice de inconsistencia
    ic_crit = indiceInconsistencia(criterios,0)
    
    %prioridades global
    %Matriz de prioridades composta pelos vetores de prioridadess
    %L1-prioridades relacionada ao primeiro critério
    %L2-prioridades relacionada ao segundo critério
    mat_prio = [prio_f1';
                prio_f2' ]
            
    %Calcualar a prioridades global para cada candidato
    disp('Prioridade global para os candidatos')
    prio_glob = prio_crit_obje' * mat_prio
    
end



   
  